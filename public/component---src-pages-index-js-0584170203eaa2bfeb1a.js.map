{"version":3,"sources":["webpack:///./src/components/Home_Img/BackgroundSection.jsx","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Menu/Menu.jsx","webpack:///./src/layouts/Home/HomeLayout.jsx"],"names":["BackgroundSection","_ref","className","react_default","a","createElement","gatsby_browser_entry","query","render","data","imageData","placeholderImage","childImageSharp","fluid","gatsby_background_image_default","Tag","_2420936597","IndexPage","HomeLayout","seo","title","keywords","style","maxWidth","marginBottom","Home_Img_BackgroundSection","React","Component","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Menu","menuOptions","map","option","to","href","charAt","toUpperCase","slice","siteTitle","Fragment","components_Menu_Menu","Date","getFullYear","_755544856","node"],"mappings":"2LA4CeA,EA7BW,SAAAC,KAAEC,UAAF,OACxBC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,aAWLC,OAAQ,SAAAC,GAEJ,IAAMC,EAAYD,EAAKE,iBAAiBC,gBAAgBC,MACxD,OACAV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACQW,IAAI,OAEJF,MAAOH,GAEPP,EAAAC,EAAAC,cAAA,0BArBdI,KAAAO,cCXIC,4FACJT,OAAA,WACE,OACEL,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAU,mCAE5BlB,EAAAC,EAAAC,cAAA,OAAKiB,MAAO,CAAEC,SAAQ,QAAWC,aAAY,YAC3CrB,EAAAC,EAAAC,cAACoB,EAAD,YAPgBC,IAAMC,WAefV,8CCpBfW,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAArC,IAAAwB,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAG,EAAAD,EAAA,iCAAAa,EAAAvC,IAAA,IAAAwC,EAAAhB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAc,EAAA,IAYA,IAAMX,EAAqBP,IAAMmB,cAAc,IAEzCX,EAAc,SAAAY,GAAK,OACvBV,EAAAhC,EAAAC,cAAC4B,EAAmBc,SAApB,KACG,SAAAC,GACC,OACEF,EAAMrC,MACLuC,EAAgBF,EAAMvC,QAAUyC,EAAgBF,EAAMvC,OAAOE,MAEtDqC,EAAMtC,QAAUsC,EAAMG,UAC5BH,EAAMrC,KAAOqC,EAAMrC,KAAKA,KAAOuC,EAAgBF,EAAMvC,OAAOE,MAGvD2B,EAAAhC,EAAAC,cAAA,uCAaf,SAAS2B,IACP,MAAM,IAAIkB,MACR,gVATJhB,EAAYiB,UAAY,CACtB1C,KAAM2C,IAAUC,OAChB9C,MAAO6C,IAAUE,OAAOC,WACxB/C,OAAQ4C,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6LCMzCK,EAAmB,SAAA7D,GAAkB,IAAf8D,EAAe9D,EAAf8D,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOzC,IAAMrB,cAAc+D,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,wLChBf,SAASW,EAATxE,GAA2D,IAA5CyE,EAA4CzE,EAA5CyE,YAAaC,EAA+B1E,EAA/B0E,KAAMC,EAAyB3E,EAAzB2E,KAAMvD,EAAmBpB,EAAnBoB,SAAUD,EAASnB,EAATmB,MAChD,OACEyD,EAAAzE,EAAAC,cAACyE,EAAA,YAAD,CACEvE,MAAOwE,EACPvE,OAAQ,SAAAC,GACN,IAAMuE,EACJN,GAAejE,EAAKwE,KAAKC,aAAaR,YACxC,OACEG,EAAAzE,EAAAC,cAAC8E,EAAA/E,EAAD,CACEgF,eAAgB,CACdT,QAEFvD,MAAOA,EACPiE,cAAa,QAAU5E,EAAKwE,KAAKC,aAAa9D,MAC9CwD,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASnE,GAEX,CACEoE,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS9E,EAAKwE,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAASnE,GAEX,CACEkE,KAAI,sBACJC,QAASP,IAGVU,OACCrE,EAASsE,OAAS,EACd,CACEL,KAAI,WACJC,QAASlE,EAASuE,KAAT,OAEX,IAELF,OAAOd,MAtDlBnE,KAAAoF,IA8DJpB,EAAIqB,aAAe,CACjBnB,KAAI,KACJC,KAAM,GACNvD,SAAU,IAGZoD,EAAItB,UAAY,CACduB,YAAatB,IAAUE,OACvBqB,KAAMvB,IAAUE,OAChBsB,KAAMxB,IAAU2C,MAChB1E,SAAU+B,IAAU4C,QAAQ5C,IAAUE,QACtClC,MAAOgC,IAAUE,OAAOC,YAGXkB,MAEf,IAAMM,EAAY,yXC/EZkB,UAAO,kBACX9F,EAAAC,EAAAC,cAAA,OAAKH,UAAU,gBACNgG,EAAYC,IAAI,SAACC,GAAD,OAClBjG,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAM+F,GAAID,GACNjG,EAAAC,EAAAC,cAAA,KAAGiG,KAAMF,GACJA,EAAOG,OAAO,GAAGC,cAAgBJ,EAAOK,MAAM,WAQ7DP,EAAc,CAChB,YACA,SACA,UACA,YAGJD,EAAK9C,UAAY,CACfuD,UAAWtD,IAAUE,QAGvB2C,EAAKH,aAAe,CAClBY,UAAS,IAGIT,QC1BT/E,iBAAa,SAAAjB,GAAA,IAAGgD,EAAHhD,EAAGgD,SAAH,OACjB9C,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuG,SAAA,KACExG,EAAAC,EAAAC,cAACuG,EAAD,MACAzG,EAAAC,EAAAC,cAAA,WACG4C,EAED9C,EAAAC,EAAAC,cAAA,oBACK,IAAIwG,MAAOC,cADhB,mBAGE3G,EAAAC,EAAAC,cAAA,KAAGiG,KAAK,4BAAR,cAnBV7F,KAAAsG,MA4BF7F,EAAWiC,UAAY,CACrBF,SAAUG,IAAU4D,KAAKzD,YAIZrC","file":"component---src-pages-index-js-0584170203eaa2bfeb1a.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport BackgroundImage from 'gatsby-background-image'\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst BackgroundSection = ({className}) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"wedding_img.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 4160)  {\n                ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n        //Set ImageData\n        const imageData = data.placeholderImage.childImageSharp.fluid\n        return(\n        <BackgroundImage \n                Tag=\"home\"\n               \n                fluid={imageData}\n                >\n                <h1>InterAudio</h1>\n        </BackgroundImage>\n         )\n        }\n       }\n  />\n)\nexport default BackgroundSection\n","import React from 'react'\nimport HomeLayout from '../layouts/Home/HomeLayout'\nimport BackgroundSection from '../components/Home_Img/BackgroundSection'\nimport SEO from '../components/seo'\n\nclass IndexPage extends React.Component{\n  render(){\n    return(\n      <HomeLayout>\n      <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n      \n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        <BackgroundSection />\n      </div>      \n    </HomeLayout>\n    )\n  }\n}\n\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport './Menu.css'\n\n\nconst Menu = () => (\n  <div className='menu_desktop'>\n          {menuOptions.map((option) => (\n         <div >    \n            <Link to={option}>\n                <a href={option}>\n                    {option.charAt(0).toUpperCase() + option.slice(1)\n                }</a>\n            </Link> \n        </div>\n      ))} \n    </div>\n\n)\nconst menuOptions = [\n    'servicios',\n    'equipo',\n    'eventos',\n    'contacto'\n];\n\nMenu.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nMenu.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Menu\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Menu from '../../components/Menu/Menu'\nimport './Homeresets.css'\nimport './HomeLayout.css'\n\n \nconst HomeLayout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Menu />\n        <div>\n          {children}\n\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n          \n        </div>\n      </>\n    )}\n  />\n)\n\nHomeLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\n \nexport default HomeLayout\n"],"sourceRoot":""}